{"ast":null,"code":"/*!\n * VERSION: 1.3.9\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n\n/* eslint-disable */\nimport { _gsScope } from \"./TweenLite.js\";\n\nvar _RAD2DEG = 180 / Math.PI,\n    _r1 = [],\n    _r2 = [],\n    _r3 = [],\n    _corProps = {},\n    _globals = _gsScope._gsDefine.globals,\n    Segment = function (a, b, c, d) {\n  if (c === d) {\n    //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n    c = d - (d - b) / 1000000;\n  }\n\n  if (a === b) {\n    //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n    b = a + (c - a) / 1000000;\n  }\n\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.d = d;\n  this.da = d - a;\n  this.ca = c - a;\n  this.ba = b - a;\n},\n    _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n    cubicToQuadratic = function (a, b, c, d) {\n  var q1 = {\n    a: a\n  },\n      q2 = {},\n      q3 = {},\n      q4 = {\n    c: d\n  },\n      mab = (a + b) / 2,\n      mbc = (b + c) / 2,\n      mcd = (c + d) / 2,\n      mabc = (mab + mbc) / 2,\n      mbcd = (mbc + mcd) / 2,\n      m8 = (mbcd - mabc) / 8;\n  q1.b = mab + (a - mab) / 4;\n  q2.b = mabc + m8;\n  q1.c = q2.a = (q1.b + q2.b) / 2;\n  q2.c = q3.a = (mabc + mbcd) / 2;\n  q3.b = mbcd - m8;\n  q4.b = mcd + (d - mcd) / 4;\n  q3.c = q4.a = (q3.b + q4.b) / 2;\n  return [q1, q2, q3, q4];\n},\n    _calculateControlPoints = function (a, curviness, quad, basic, correlate) {\n  var l = a.length - 1,\n      ii = 0,\n      cp1 = a[0].a,\n      i,\n      p1,\n      p2,\n      p3,\n      seg,\n      m1,\n      m2,\n      mm,\n      cp2,\n      qb,\n      r1,\n      r2,\n      tl;\n\n  for (i = 0; i < l; i++) {\n    seg = a[ii];\n    p1 = seg.a;\n    p2 = seg.d;\n    p3 = a[ii + 1].d;\n\n    if (correlate) {\n      r1 = _r1[i];\n      r2 = _r2[i];\n      tl = (r2 + r1) * curviness * 0.25 / (basic ? 0.5 : _r3[i] || 0.5);\n      m1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : r1 !== 0 ? tl / r1 : 0);\n      m2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : r2 !== 0 ? tl / r2 : 0);\n      mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + 0.5) / 4 || 0));\n    } else {\n      m1 = p2 - (p2 - p1) * curviness * 0.5;\n      m2 = p2 + (p3 - p2) * curviness * 0.5;\n      mm = p2 - (m1 + m2) / 2;\n    }\n\n    m1 += mm;\n    m2 += mm;\n    seg.c = cp2 = m1;\n\n    if (i !== 0) {\n      seg.b = cp1;\n    } else {\n      seg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n    }\n\n    seg.da = p2 - p1;\n    seg.ca = cp2 - p1;\n    seg.ba = cp1 - p1;\n\n    if (quad) {\n      qb = cubicToQuadratic(p1, cp1, cp2, p2);\n      a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n      ii += 4;\n    } else {\n      ii++;\n    }\n\n    cp1 = m2;\n  }\n\n  seg = a[ii];\n  seg.b = cp1;\n  seg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\n  seg.da = seg.d - seg.a;\n  seg.ca = seg.c - seg.a;\n  seg.ba = cp1 - seg.a;\n\n  if (quad) {\n    qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n    a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n  }\n},\n    _parseAnchors = function (values, p, correlate, prepend) {\n  var a = [],\n      l,\n      i,\n      p1,\n      p2,\n      p3,\n      tmp;\n\n  if (prepend) {\n    values = [prepend].concat(values);\n    i = values.length;\n\n    while (--i > -1) {\n      if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n        values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n      }\n    }\n  }\n\n  l = values.length - 2;\n\n  if (l < 0) {\n    a[0] = new Segment(values[0][p], 0, 0, values[0][p]);\n    return a;\n  }\n\n  for (i = 0; i < l; i++) {\n    p1 = values[i][p];\n    p2 = values[i + 1][p];\n    a[i] = new Segment(p1, 0, 0, p2);\n\n    if (correlate) {\n      p3 = values[i + 2][p];\n      _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n      _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n    }\n  }\n\n  a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n  return a;\n},\n    bezierThrough = function (values, curviness, quadratic, basic, correlate, prepend) {\n  var obj = {},\n      props = [],\n      first = prepend || values[0],\n      i,\n      p,\n      a,\n      j,\n      r,\n      l,\n      seamless,\n      last;\n  correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n\n  if (curviness == null) {\n    curviness = 1;\n  }\n\n  for (p in values[0]) {\n    props.push(p);\n  } //check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\n\n  if (values.length > 1) {\n    last = values[values.length - 1];\n    seamless = true;\n    i = props.length;\n\n    while (--i > -1) {\n      p = props[i];\n\n      if (Math.abs(first[p] - last[p]) > 0.05) {\n        //build in a tolerance of +/-0.05 to accommodate rounding errors.\n        seamless = false;\n        break;\n      }\n    }\n\n    if (seamless) {\n      values = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\n      if (prepend) {\n        values.unshift(prepend);\n      }\n\n      values.push(values[1]);\n      prepend = values[values.length - 3];\n    }\n  }\n\n  _r1.length = _r2.length = _r3.length = 0;\n  i = props.length;\n\n  while (--i > -1) {\n    p = props[i];\n    _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n    obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n  }\n\n  i = _r1.length;\n\n  while (--i > -1) {\n    _r1[i] = Math.sqrt(_r1[i]);\n    _r2[i] = Math.sqrt(_r2[i]);\n  }\n\n  if (!basic) {\n    i = props.length;\n\n    while (--i > -1) {\n      if (_corProps[p]) {\n        a = obj[props[i]];\n        l = a.length - 1;\n\n        for (j = 0; j < l; j++) {\n          r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n          _r3[j] = (_r3[j] || 0) + r * r;\n        }\n      }\n    }\n\n    i = _r3.length;\n\n    while (--i > -1) {\n      _r3[i] = Math.sqrt(_r3[i]);\n    }\n  }\n\n  i = props.length;\n  j = quadratic ? 4 : 1;\n\n  while (--i > -1) {\n    p = props[i];\n    a = obj[p];\n\n    _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\n\n    if (seamless) {\n      a.splice(0, j);\n      a.splice(a.length - j, j);\n    }\n  }\n\n  return obj;\n},\n    _parseBezierData = function (values, type, prepend) {\n  type = type || \"soft\";\n  var obj = {},\n      inc = type === \"cubic\" ? 3 : 2,\n      soft = type === \"soft\",\n      props = [],\n      a,\n      b,\n      c,\n      d,\n      cur,\n      i,\n      j,\n      l,\n      p,\n      cnt,\n      tmp;\n\n  if (soft && prepend) {\n    values = [prepend].concat(values);\n  }\n\n  if (values == null || values.length < inc + 1) {\n    throw \"invalid Bezier data\";\n  }\n\n  for (p in values[0]) {\n    props.push(p);\n  }\n\n  i = props.length;\n\n  while (--i > -1) {\n    p = props[i];\n    obj[p] = cur = [];\n    cnt = 0;\n    l = values.length;\n\n    for (j = 0; j < l; j++) {\n      a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n      if (soft) if (j > 1) if (j < l - 1) {\n        cur[cnt++] = (a + cur[cnt - 2]) / 2;\n      }\n      cur[cnt++] = a;\n    }\n\n    l = cnt - inc + 1;\n    cnt = 0;\n\n    for (j = 0; j < l; j += inc) {\n      a = cur[j];\n      b = cur[j + 1];\n      c = cur[j + 2];\n      d = inc === 2 ? 0 : cur[j + 3];\n      cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n    }\n\n    cur.length = cnt;\n  }\n\n  return obj;\n},\n    _addCubicLengths = function (a, steps, resolution) {\n  var inc = 1 / resolution,\n      j = a.length,\n      d,\n      d1,\n      s,\n      da,\n      ca,\n      ba,\n      p,\n      i,\n      inv,\n      bez,\n      index;\n\n  while (--j > -1) {\n    bez = a[j];\n    s = bez.a;\n    da = bez.d - s;\n    ca = bez.c - s;\n    ba = bez.b - s;\n    d = d1 = 0;\n\n    for (i = 1; i <= resolution; i++) {\n      p = inc * i;\n      inv = 1 - p;\n      d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n      index = j * resolution + i - 1;\n      steps[index] = (steps[index] || 0) + d * d;\n    }\n  }\n},\n    _parseLengthData = function (obj, resolution) {\n  resolution = resolution >> 0 || 6;\n  var a = [],\n      lengths = [],\n      d = 0,\n      total = 0,\n      threshold = resolution - 1,\n      segments = [],\n      curLS = [],\n      //current length segments array\n  p,\n      i,\n      l,\n      index;\n\n  for (p in obj) {\n    _addCubicLengths(obj[p], a, resolution);\n  }\n\n  l = a.length;\n\n  for (i = 0; i < l; i++) {\n    d += Math.sqrt(a[i]);\n    index = i % resolution;\n    curLS[index] = d;\n\n    if (index === threshold) {\n      total += d;\n      index = i / resolution >> 0;\n      segments[index] = curLS;\n      lengths[index] = total;\n      d = 0;\n      curLS = [];\n    }\n  }\n\n  return {\n    length: total,\n    lengths: lengths,\n    segments: segments\n  };\n},\n    BezierPlugin = _gsScope._gsDefine.plugin({\n  propName: \"bezier\",\n  priority: -1,\n  version: \"1.3.9\",\n  API: 2,\n  global: true,\n  //gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n  init: function (target, vars, tween) {\n    this._target = target;\n\n    if (vars instanceof Array) {\n      vars = {\n        values: vars\n      };\n    }\n\n    this._func = {};\n    this._mod = {};\n    this._props = [];\n    this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n    var values = vars.values || [],\n        first = {},\n        second = values[0],\n        autoRotate = vars.autoRotate || tween.vars.orientToBezier,\n        p,\n        isFunc,\n        i,\n        j,\n        prepend;\n    this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [[\"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0]] : null;\n\n    for (p in second) {\n      this._props.push(p);\n    }\n\n    i = this._props.length;\n\n    while (--i > -1) {\n      p = this._props[i];\n\n      this._overwriteProps.push(p);\n\n      isFunc = this._func[p] = typeof target[p] === \"function\";\n      first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n      if (!prepend) if (first[p] !== values[0][p]) {\n        prepend = first;\n      }\n    }\n\n    this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n    this._segCount = this._beziers[p].length;\n\n    if (this._timeRes) {\n      var ld = _parseLengthData(this._beziers, this._timeRes);\n\n      this._length = ld.length;\n      this._lengths = ld.lengths;\n      this._segments = ld.segments;\n      this._l1 = this._li = this._s1 = this._si = 0;\n      this._l2 = this._lengths[0];\n      this._curSeg = this._segments[0];\n      this._s2 = this._curSeg[0];\n      this._prec = 1 / this._curSeg.length;\n    }\n\n    if (autoRotate = this._autoRotate) {\n      this._initialRotations = [];\n\n      if (!(autoRotate[0] instanceof Array)) {\n        this._autoRotate = autoRotate = [autoRotate];\n      }\n\n      i = autoRotate.length;\n\n      while (--i > -1) {\n        for (j = 0; j < 3; j++) {\n          p = autoRotate[i][j];\n          this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n        }\n\n        p = autoRotate[i][2];\n        this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\n        this._overwriteProps.push(p);\n      }\n    }\n\n    this._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\n    return true;\n  },\n  //called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n  set: function (v) {\n    var segments = this._segCount,\n        func = this._func,\n        target = this._target,\n        notStart = v !== this._startRatio,\n        curIndex,\n        inv,\n        i,\n        p,\n        b,\n        t,\n        val,\n        l,\n        lengths,\n        curSeg,\n        v1;\n\n    if (!this._timeRes) {\n      curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n      t = (v - curIndex * (1 / segments)) * segments;\n    } else {\n      lengths = this._lengths;\n      curSeg = this._curSeg;\n      v1 = v * this._length;\n      i = this._li; //find the appropriate segment (if the currently cached one isn't correct)\n\n      if (v1 > this._l2 && i < segments - 1) {\n        l = segments - 1;\n\n        while (i < l && (this._l2 = lengths[++i]) <= v1) {}\n\n        this._l1 = lengths[i - 1];\n        this._li = i;\n        this._curSeg = curSeg = this._segments[i];\n        this._s2 = curSeg[this._s1 = this._si = 0];\n      } else if (v1 < this._l1 && i > 0) {\n        while (i > 0 && (this._l1 = lengths[--i]) >= v1) {}\n\n        if (i === 0 && v1 < this._l1) {\n          this._l1 = 0;\n        } else {\n          i++;\n        }\n\n        this._l2 = lengths[i];\n        this._li = i;\n        this._curSeg = curSeg = this._segments[i];\n        this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n        this._s2 = curSeg[this._si];\n      }\n\n      curIndex = i; //now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\n      v1 -= this._l1;\n      i = this._si;\n\n      if (v1 > this._s2 && i < curSeg.length - 1) {\n        l = curSeg.length - 1;\n\n        while (i < l && (this._s2 = curSeg[++i]) <= v1) {}\n\n        this._s1 = curSeg[i - 1];\n        this._si = i;\n      } else if (v1 < this._s1 && i > 0) {\n        while (i > 0 && (this._s1 = curSeg[--i]) >= v1) {}\n\n        if (i === 0 && v1 < this._s1) {\n          this._s1 = 0;\n        } else {\n          i++;\n        }\n\n        this._s2 = curSeg[i];\n        this._si = i;\n      }\n\n      t = v === 1 ? 1 : (i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n    }\n\n    inv = 1 - t;\n    i = this._props.length;\n\n    while (--i > -1) {\n      p = this._props[i];\n      b = this._beziers[p][curIndex];\n      val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\n      if (this._mod[p]) {\n        val = this._mod[p](val, target);\n      }\n\n      if (func[p]) {\n        target[p](val);\n      } else {\n        target[p] = val;\n      }\n    }\n\n    if (this._autoRotate) {\n      var ar = this._autoRotate,\n          b2,\n          x1,\n          y1,\n          x2,\n          y2,\n          add,\n          conv;\n      i = ar.length;\n\n      while (--i > -1) {\n        p = ar[i][2];\n        add = ar[i][3] || 0;\n        conv = ar[i][4] === true ? 1 : _RAD2DEG;\n        b = this._beziers[ar[i][0]];\n        b2 = this._beziers[ar[i][1]];\n\n        if (b && b2) {\n          //in case one of the properties got overwritten.\n          b = b[curIndex];\n          b2 = b2[curIndex];\n          x1 = b.a + (b.b - b.a) * t;\n          x2 = b.b + (b.c - b.b) * t;\n          x1 += (x2 - x1) * t;\n          x2 += (b.c + (b.d - b.c) * t - x2) * t;\n          y1 = b2.a + (b2.b - b2.a) * t;\n          y2 = b2.b + (b2.c - b2.b) * t;\n          y1 += (y2 - y1) * t;\n          y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n          val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n          if (this._mod[p]) {\n            val = this._mod[p](val, target); //for modProps\n          }\n\n          if (func[p]) {\n            target[p](val);\n          } else {\n            target[p] = val;\n          }\n        }\n      }\n    }\n  }\n}),\n    p = BezierPlugin.prototype;\n\nBezierPlugin.bezierThrough = bezierThrough;\nBezierPlugin.cubicToQuadratic = cubicToQuadratic;\nBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\nBezierPlugin.quadraticToCubic = function (a, b, c) {\n  return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n};\n\nBezierPlugin._cssRegister = function () {\n  var CSSPlugin = _globals.CSSPlugin;\n\n  if (!CSSPlugin) {\n    return;\n  }\n\n  var _internals = CSSPlugin._internals,\n      _parseToProxy = _internals._parseToProxy,\n      _setPluginRatio = _internals._setPluginRatio,\n      CSSPropTween = _internals.CSSPropTween;\n\n  _internals._registerComplexSpecialProp(\"bezier\", {\n    parser: function (t, e, prop, cssp, pt, plugin) {\n      if (e instanceof Array) {\n        e = {\n          values: e\n        };\n      }\n\n      plugin = new BezierPlugin();\n      var values = e.values,\n          l = values.length - 1,\n          pluginValues = [],\n          v = {},\n          i,\n          p,\n          data;\n\n      if (l < 0) {\n        return pt;\n      }\n\n      for (i = 0; i <= l; i++) {\n        data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n        pluginValues[i] = data.end;\n      }\n\n      for (p in e) {\n        v[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n      }\n\n      v.values = pluginValues;\n      pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n      pt.data = data;\n      pt.plugin = plugin;\n      pt.setRatio = _setPluginRatio;\n\n      if (v.autoRotate === 0) {\n        v.autoRotate = true;\n      }\n\n      if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n        i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n        v.autoRotate = data.end.left != null ? [[\"left\", \"top\", \"rotation\", i, false]] : data.end.x != null ? [[\"x\", \"y\", \"rotation\", i, false]] : false;\n      }\n\n      if (v.autoRotate) {\n        if (!cssp._transform) {\n          cssp._enableTransforms(false);\n        }\n\n        data.autoRotate = cssp._target._gsTransform;\n        data.proxy.rotation = data.autoRotate.rotation || 0;\n\n        cssp._overwriteProps.push(\"rotation\");\n      }\n\n      plugin._onInitTween(data.proxy, v, cssp._tween);\n\n      return pt;\n    }\n  });\n};\n\np._mod = function (lookup) {\n  var op = this._overwriteProps,\n      i = op.length,\n      val;\n\n  while (--i > -1) {\n    val = lookup[op[i]];\n\n    if (val && typeof val === \"function\") {\n      this._mod[op[i]] = val;\n    }\n  }\n};\n\np._kill = function (lookup) {\n  var a = this._props,\n      p,\n      i;\n\n  for (p in this._beziers) {\n    if (p in lookup) {\n      delete this._beziers[p];\n      delete this._func[p];\n      i = a.length;\n\n      while (--i > -1) {\n        if (a[i] === p) {\n          a.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  a = this._autoRotate;\n\n  if (a) {\n    i = a.length;\n\n    while (--i > -1) {\n      if (lookup[a[i][2]]) {\n        a.splice(i, 1);\n      }\n    }\n  }\n\n  return this._super._kill.call(this, lookup);\n};\n\nexport { BezierPlugin, BezierPlugin as default };","map":{"version":3,"sources":["/Users/stik/Desktop/react-animation-with-create-app/node_modules/gsap/BezierPlugin.js"],"names":["_gsScope","_RAD2DEG","Math","PI","_r1","_r2","_r3","_corProps","_globals","_gsDefine","globals","Segment","a","b","c","d","da","ca","ba","_correlate","cubicToQuadratic","q1","q2","q3","q4","mab","mbc","mcd","mabc","mbcd","m8","_calculateControlPoints","curviness","quad","basic","correlate","l","length","ii","cp1","i","p1","p2","p3","seg","m1","m2","mm","cp2","qb","r1","r2","tl","splice","_parseAnchors","values","p","prepend","tmp","concat","charAt","Number","substr","bezierThrough","quadratic","obj","props","first","j","r","seamless","last","push","abs","unshift","indexOf","sqrt","_parseBezierData","type","inc","soft","cur","cnt","_addCubicLengths","steps","resolution","d1","s","inv","bez","index","_parseLengthData","lengths","total","threshold","segments","curLS","BezierPlugin","plugin","propName","priority","version","API","global","init","target","vars","tween","_target","Array","_func","_mod","_props","_timeRes","timeResolution","parseInt","second","autoRotate","orientToBezier","isFunc","_autoRotate","_overwriteProps","parseFloat","_beziers","isNaN","_segCount","ld","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","call","_startRatio","runBackwards","set","v","func","notStart","curIndex","t","val","curSeg","v1","ar","b2","x1","y1","x2","y2","add","conv","atan2","prototype","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_internals","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","e","prop","cssp","pt","pluginValues","data","end","setRatio","left","x","_transform","_enableTransforms","_gsTransform","proxy","rotation","_onInitTween","_tween","lookup","op","_kill","_super","default"],"mappings":"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","sourcesContent":["/*!\n * VERSION: 1.3.9\n * DATE: 2019-05-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2019, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\n/* eslint-disable */\nimport { _gsScope } from \"./TweenLite.js\";\n\n\t\tvar _RAD2DEG = 180 / Math.PI,\n\t\t\t_r1 = [],\n\t\t\t_r2 = [],\n\t\t\t_r3 = [],\n\t\t\t_corProps = {},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\tSegment = function(a, b, c, d) {\n\t\t\t\tif (c === d) { //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tc = d - (d - b) / 1000000;\n\t\t\t\t}\n\t\t\t\tif (a === b) { //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tb = a + (c - a) / 1000000;\n\t\t\t\t}\n\t\t\t\tthis.a = a;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.d = d;\n\t\t\t\tthis.da = d - a;\n\t\t\t\tthis.ca = c - a;\n\t\t\t\tthis.ba = b - a;\n\t\t\t},\n\t\t\t_correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n\t\t\tcubicToQuadratic = function(a, b, c, d) {\n\t\t\t\tvar q1 = {a:a},\n\t\t\t\t\tq2 = {},\n\t\t\t\t\tq3 = {},\n\t\t\t\t\tq4 = {c:d},\n\t\t\t\t\tmab = (a + b) / 2,\n\t\t\t\t\tmbc = (b + c) / 2,\n\t\t\t\t\tmcd = (c + d) / 2,\n\t\t\t\t\tmabc = (mab + mbc) / 2,\n\t\t\t\t\tmbcd = (mbc + mcd) / 2,\n\t\t\t\t\tm8 = (mbcd - mabc) / 8;\n\t\t\t\tq1.b = mab + (a - mab) / 4;\n\t\t\t\tq2.b = mabc + m8;\n\t\t\t\tq1.c = q2.a = (q1.b + q2.b) / 2;\n\t\t\t\tq2.c = q3.a = (mabc + mbcd) / 2;\n\t\t\t\tq3.b = mbcd - m8;\n\t\t\t\tq4.b = mcd + (d - mcd) / 4;\n\t\t\t\tq3.c = q4.a = (q3.b + q4.b) / 2;\n\t\t\t\treturn [q1, q2, q3, q4];\n\t\t\t},\n\t\t\t_calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t\t\t\tvar l = a.length - 1,\n\t\t\t\t\tii = 0,\n\t\t\t\t\tcp1 = a[0].a,\n\t\t\t\t\ti, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tseg = a[ii];\n\t\t\t\t\tp1 = seg.a;\n\t\t\t\t\tp2 = seg.d;\n\t\t\t\t\tp3 = a[ii+1].d;\n\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tr1 = _r1[i];\n\t\t\t\t\t\tr2 = _r2[i];\n\t\t\t\t\t\ttl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : (r1 !== 0 ? tl / r1 : 0));\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : (r2 !== 0 ? tl / r2 : 0));\n\t\t\t\t\t\tmm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * curviness * 0.5;\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * curviness * 0.5;\n\t\t\t\t\t\tmm = p2 - (m1 + m2) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tm1 += mm;\n\t\t\t\t\tm2 += mm;\n\n\t\t\t\t\tseg.c = cp2 = m1;\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tseg.b = cp1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n\t\t\t\t\t}\n\n\t\t\t\t\tseg.da = p2 - p1;\n\t\t\t\t\tseg.ca = cp2 - p1;\n\t\t\t\t\tseg.ba = cp1 - p1;\n\n\t\t\t\t\tif (quad) {\n\t\t\t\t\t\tqb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t\t\tii += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tii++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcp1 = m2;\n\t\t\t\t}\n\t\t\t\tseg = a[ii];\n\t\t\t\tseg.b = cp1;\n\t\t\t\tseg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\t\t\t\tseg.da = seg.d - seg.a;\n\t\t\t\tseg.ca = seg.c - seg.a;\n\t\t\t\tseg.ba = cp1 - seg.a;\n\t\t\t\tif (quad) {\n\t\t\t\t\tqb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseAnchors = function(values, p, correlate, prepend) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tl, i, p1, p2, p3, tmp;\n\t\t\t\tif (prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t\ti = values.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (typeof( (tmp = values[i][p]) ) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t\t\t\t\t\t\tvalues[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tl = values.length - 2;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\ta[0] = new Segment(values[0][p], 0, 0, values[0][p]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tp1 = values[i][p];\n\t\t\t\t\tp2 = values[i+1][p];\n\t\t\t\t\ta[i] = new Segment(p1, 0, 0, p2);\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tp3 = values[i+2][p];\n\t\t\t\t\t\t_r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t\t\t\t\t\t_r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[i] = new Segment(values[i][p], 0, 0, values[i+1][p]);\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tbezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\tprops = [],\n\t\t\t\t\tfirst = prepend || values[0],\n\t\t\t\t\ti, p, a, j, r, l, seamless, last;\n\t\t\t\tcorrelate = (typeof(correlate) === \"string\") ? \",\"+correlate+\",\" : _correlate;\n\t\t\t\tif (curviness == null) {\n\t\t\t\t\tcurviness = 1;\n\t\t\t\t}\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\t//check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\t\t\t\tif (values.length > 1) {\n\t\t\t\t\tlast = values[values.length - 1];\n\t\t\t\t\tseamless = true;\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = props[i];\n\t\t\t\t\t\tif (Math.abs(first[p] - last[p]) > 0.05) { //build in a tolerance of +/-0.05 to accommodate rounding errors.\n\t\t\t\t\t\t\tseamless = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\tvalues = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\t\t\t\t\t\tif (prepend) {\n\t\t\t\t\t\t\tvalues.unshift(prepend);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues.push(values[1]);\n\t\t\t\t\t\tprepend = values[values.length - 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_r1.length = _r2.length = _r3.length = 0;\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\t_corProps[p] = (correlate.indexOf(\",\"+p+\",\") !== -1);\n\t\t\t\t\tobj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t\t\t\t}\n\t\t\t\ti = _r1.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_r1[i] = Math.sqrt(_r1[i]);\n\t\t\t\t\t_r2[i] = Math.sqrt(_r2[i]);\n\t\t\t\t}\n\t\t\t\tif (!basic) {\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (_corProps[p]) {\n\t\t\t\t\t\t\ta = obj[props[i]];\n\t\t\t\t\t\t\tl = a.length - 1;\n\t\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\t\tr = (a[j+1].da / _r2[j] + a[j].da / _r1[j]) || 0;\n\t\t\t\t\t\t\t\t_r3[j] = (_r3[j] || 0) + r * r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti = _r3.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_r3[i] = Math.sqrt(_r3[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\tj = quadratic ? 4 : 1;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\ta = obj[p];\n\t\t\t\t\t_calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\ta.splice(0, j);\n\t\t\t\t\t\ta.splice(a.length - j, j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_parseBezierData = function(values, type, prepend) {\n\t\t\t\ttype = type || \"soft\";\n\t\t\t\tvar obj = {},\n\t\t\t\t\tinc = (type === \"cubic\") ? 3 : 2,\n\t\t\t\t\tsoft = (type === \"soft\"),\n\t\t\t\t\tprops = [],\n\t\t\t\t\ta, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t\t\t\tif (soft && prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t}\n\t\t\t\tif (values == null || values.length < inc + 1) { throw \"invalid Bezier data\"; }\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\tobj[p] = cur = [];\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tl = values.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\ta = (prepend == null) ? values[j][p] : (typeof( (tmp = values[j][p]) ) === \"string\" && tmp.charAt(1) === \"=\") ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t\t\t\t\t\tif (soft) if (j > 1) if (j < l - 1) {\n\t\t\t\t\t\t\tcur[cnt++] = (a + cur[cnt-2]) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur[cnt++] = a;\n\t\t\t\t\t}\n\t\t\t\t\tl = cnt - inc + 1;\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tfor (j = 0; j < l; j += inc) {\n\t\t\t\t\t\ta = cur[j];\n\t\t\t\t\t\tb = cur[j+1];\n\t\t\t\t\t\tc = cur[j+2];\n\t\t\t\t\t\td = (inc === 2) ? 0 : cur[j+3];\n\t\t\t\t\t\tcur[cnt++] = tmp = (inc === 3) ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t\t\t\t}\n\t\t\t\t\tcur.length = cnt;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_addCubicLengths = function(a, steps, resolution) {\n\t\t\t\tvar inc = 1 / resolution,\n\t\t\t\t\tj = a.length,\n\t\t\t\t\td, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t\t\t\twhile (--j > -1) {\n\t\t\t\t\tbez = a[j];\n\t\t\t\t\ts = bez.a;\n\t\t\t\t\tda = bez.d - s;\n\t\t\t\t\tca = bez.c - s;\n\t\t\t\t\tba = bez.b - s;\n\t\t\t\t\td = d1 = 0;\n\t\t\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\t\t\tp = inc * i;\n\t\t\t\t\t\tinv = 1 - p;\n\t\t\t\t\t\td = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t\t\t\t\t\tindex = j * resolution + i - 1;\n\t\t\t\t\t\tsteps[index] = (steps[index] || 0) + d * d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseLengthData = function(obj, resolution) {\n\t\t\t\tresolution = resolution >> 0 || 6;\n\t\t\t\tvar a = [],\n\t\t\t\t\tlengths = [],\n\t\t\t\t\td = 0,\n\t\t\t\t\ttotal = 0,\n\t\t\t\t\tthreshold = resolution - 1,\n\t\t\t\t\tsegments = [],\n\t\t\t\t\tcurLS = [], //current length segments array\n\t\t\t\t\tp, i, l, index;\n\t\t\t\tfor (p in obj) {\n\t\t\t\t\t_addCubicLengths(obj[p], a, resolution);\n\t\t\t\t}\n\t\t\t\tl = a.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\td += Math.sqrt(a[i]);\n\t\t\t\t\tindex = i % resolution;\n\t\t\t\t\tcurLS[index] = d;\n\t\t\t\t\tif (index === threshold) {\n\t\t\t\t\t\ttotal += d;\n\t\t\t\t\t\tindex = (i / resolution) >> 0;\n\t\t\t\t\t\tsegments[index] = curLS;\n\t\t\t\t\t\tlengths[index] = total;\n\t\t\t\t\t\td = 0;\n\t\t\t\t\t\tcurLS = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {length:total, lengths:lengths, segments:segments};\n\t\t\t},\n\n\n\n\t\t\tBezierPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\t\tpropName: \"bezier\",\n\t\t\t\t\tpriority: -1,\n\t\t\t\t\tversion: \"1.3.9\",\n\t\t\t\t\tAPI: 2,\n\t\t\t\t\tglobal:true,\n\n\t\t\t\t\t//gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\t\tinit: function(target, vars, tween) {\n\t\t\t\t\t\tthis._target = target;\n\t\t\t\t\t\tif (vars instanceof Array) {\n\t\t\t\t\t\t\tvars = {values:vars};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._func = {};\n\t\t\t\t\t\tthis._mod = {};\n\t\t\t\t\t\tthis._props = [];\n\t\t\t\t\t\tthis._timeRes = (vars.timeResolution == null) ? 6 : parseInt(vars.timeResolution, 10);\n\t\t\t\t\t\tvar values = vars.values || [],\n\t\t\t\t\t\t\tfirst = {},\n\t\t\t\t\t\t\tsecond = values[0],\n\t\t\t\t\t\t\tautoRotate = vars.autoRotate || tween.vars.orientToBezier,\n\t\t\t\t\t\t\tp, isFunc, i, j, prepend;\n\n\t\t\t\t\t\tthis._autoRotate = autoRotate ? (autoRotate instanceof Array) ? autoRotate : [[\"x\",\"y\",\"rotation\",((autoRotate === true) ? 0 : Number(autoRotate) || 0)]] : null;\n\t\t\t\t\t\tfor (p in second) {\n\t\t\t\t\t\t\tthis._props.push(p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\n\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\tisFunc = this._func[p] = (typeof(target[p]) === \"function\");\n\t\t\t\t\t\t\tfirst[p] = (!isFunc) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\t\t\tif (!prepend) if (first[p] !== values[0][p]) {\n\t\t\t\t\t\t\t\tprepend = first;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._beziers = (vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\") ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === \"thruBasic\"), vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t\t\t\t\t\tthis._segCount = this._beziers[p].length;\n\n\t\t\t\t\t\tif (this._timeRes) {\n\t\t\t\t\t\t\tvar ld = _parseLengthData(this._beziers, this._timeRes);\n\t\t\t\t\t\t\tthis._length = ld.length;\n\t\t\t\t\t\t\tthis._lengths = ld.lengths;\n\t\t\t\t\t\t\tthis._segments = ld.segments;\n\t\t\t\t\t\t\tthis._l1 = this._li = this._s1 = this._si = 0;\n\t\t\t\t\t\t\tthis._l2 = this._lengths[0];\n\t\t\t\t\t\t\tthis._curSeg = this._segments[0];\n\t\t\t\t\t\t\tthis._s2 = this._curSeg[0];\n\t\t\t\t\t\t\tthis._prec = 1 / this._curSeg.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((autoRotate = this._autoRotate)) {\n\t\t\t\t\t\t\tthis._initialRotations = [];\n\t\t\t\t\t\t\tif (!(autoRotate[0] instanceof Array)) {\n\t\t\t\t\t\t\t\tthis._autoRotate = autoRotate = [autoRotate];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti = autoRotate.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\t\tp = autoRotate[i][j];\n\t\t\t\t\t\t\t\t\tthis._func[p] = (typeof(target[p]) === \"function\") ? target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ] : false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = autoRotate[i][2];\n\t\t\t\t\t\t\t\tthis._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\t\t\t\tset: function(v) {\n\t\t\t\t\t\tvar segments = this._segCount,\n\t\t\t\t\t\t\tfunc = this._func,\n\t\t\t\t\t\t\ttarget = this._target,\n\t\t\t\t\t\t\tnotStart = (v !== this._startRatio),\n\t\t\t\t\t\t\tcurIndex, inv, i, p, b, t, val, l, lengths, curSeg, v1;\n\t\t\t\t\t\tif (!this._timeRes) {\n\t\t\t\t\t\t\tcurIndex = (v < 0) ? 0 : (v >= 1) ? segments - 1 : (segments * v) >> 0;\n\t\t\t\t\t\t\tt = (v - (curIndex * (1 / segments))) * segments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlengths = this._lengths;\n\t\t\t\t\t\t\tcurSeg = this._curSeg;\n\t\t\t\t\t\t\tv1 = v * this._length;\n\t\t\t\t\t\t\ti = this._li;\n\t\t\t\t\t\t\t//find the appropriate segment (if the currently cached one isn't correct)\n\t\t\t\t\t\t\tif (v1 > this._l2 && i < segments - 1) {\n\t\t\t\t\t\t\t\tl = segments - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._l2 = lengths[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._l1 = lengths[i-1];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[(this._s1 = this._si = 0)];\n\t\t\t\t\t\t\t} else if (v1 < this._l1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._l1 = lengths[--i]) >= v1) { }\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._l1) {\n\t\t\t\t\t\t\t\t\tthis._l1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._l2 = lengths[i];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[this._si];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurIndex = i;\n\t\t\t\t\t\t\t//now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\t\t\t\t\t\t\tv1 -= this._l1;\n\t\t\t\t\t\t\ti = this._si;\n\t\t\t\t\t\t\tif (v1 > this._s2 && i < curSeg.length - 1) {\n\t\t\t\t\t\t\t\tl = curSeg.length - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._s2 = curSeg[++i]) <= v1) {\t}\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[i-1];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t} else if (v1 < this._s1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._s1 = curSeg[--i]) >= v1) {\t}\n\t\t\t\t\t\t\t\tif (i === 0 && v1 < this._s1) {\n\t\t\t\t\t\t\t\t\tthis._s1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[i];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt = (v === 1) ? 1 : ((i + (v1 - this._s1) / (this._s2 - this._s1)) * this._prec) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinv = 1 - t;\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\t\t\t\t\t\t\tb = this._beziers[p][curIndex];\n\t\t\t\t\t\t\tval = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\tval = this._mod[p](val, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._autoRotate) {\n\t\t\t\t\t\t\tvar ar = this._autoRotate,\n\t\t\t\t\t\t\t\tb2, x1, y1, x2, y2, add, conv;\n\t\t\t\t\t\t\ti = ar.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tp = ar[i][2];\n\t\t\t\t\t\t\t\tadd = ar[i][3] || 0;\n\t\t\t\t\t\t\t\tconv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n\t\t\t\t\t\t\t\tb = this._beziers[ar[i][0]];\n\t\t\t\t\t\t\t\tb2 = this._beziers[ar[i][1]];\n\n\t\t\t\t\t\t\t\tif (b && b2) { //in case one of the properties got overwritten.\n\t\t\t\t\t\t\t\t\tb = b[curIndex];\n\t\t\t\t\t\t\t\t\tb2 = b2[curIndex];\n\n\t\t\t\t\t\t\t\t\tx1 = b.a + (b.b - b.a) * t;\n\t\t\t\t\t\t\t\t\tx2 = b.b + (b.c - b.b) * t;\n\t\t\t\t\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\t\t\t\t\tx2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n\t\t\t\t\t\t\t\t\ty1 = b2.a + (b2.b - b2.a) * t;\n\t\t\t\t\t\t\t\t\ty2 = b2.b + (b2.c - b2.b) * t;\n\t\t\t\t\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\t\t\t\t\ty2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n\n\t\t\t\t\t\t\t\t\tval = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n\t\t\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\t\t\tval = this._mod[p](val, target); //for modProps\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\tp = BezierPlugin.prototype;\n\n\n\t\tBezierPlugin.bezierThrough = bezierThrough;\n\t\tBezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t\tBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\t\tBezierPlugin.quadraticToCubic = function(a, b, c) {\n\t\t\treturn new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t};\n\n\t\tBezierPlugin._cssRegister = function() {\n\t\t\tvar CSSPlugin = _globals.CSSPlugin;\n\t\t\tif (!CSSPlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _internals = CSSPlugin._internals,\n\t\t\t\t_parseToProxy = _internals._parseToProxy,\n\t\t\t\t_setPluginRatio = _internals._setPluginRatio,\n\t\t\t\tCSSPropTween = _internals.CSSPropTween;\n\t\t\t_internals._registerComplexSpecialProp(\"bezier\", {parser:function(t, e, prop, cssp, pt, plugin) {\n\t\t\t\tif (e instanceof Array) {\n\t\t\t\t\te = {values:e};\n\t\t\t\t}\n\t\t\t\tplugin = new BezierPlugin();\n\t\t\t\tvar values = e.values,\n\t\t\t\t\tl = values.length - 1,\n\t\t\t\t\tpluginValues = [],\n\t\t\t\t\tv = {},\n\t\t\t\t\ti, p, data;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\t\tdata = _parseToProxy(t, values[i], cssp, pt, plugin, (l !== i));\n\t\t\t\t\tpluginValues[i] = data.end;\n\t\t\t\t}\n\t\t\t\tfor (p in e) {\n\t\t\t\t\tv[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n\t\t\t\t}\n\t\t\t\tv.values = pluginValues;\n\t\t\t\tpt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t\t\t\tpt.data = data;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setPluginRatio;\n\t\t\t\tif (v.autoRotate === 0) {\n\t\t\t\t\tv.autoRotate = true;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t\t\t\t\ti = (v.autoRotate === true) ? 0 : Number(v.autoRotate);\n\t\t\t\t\tv.autoRotate = (data.end.left != null) ? [[\"left\",\"top\",\"rotation\",i,false]] : (data.end.x != null) ? [[\"x\",\"y\",\"rotation\",i,false]] : false;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate) {\n\t\t\t\t\tif (!cssp._transform) {\n\t\t\t\t\t\tcssp._enableTransforms(false);\n\t\t\t\t\t}\n\t\t\t\t\tdata.autoRotate = cssp._target._gsTransform;\n\t\t\t\t\tdata.proxy.rotation = data.autoRotate.rotation || 0;\n\t\t\t\t\tcssp._overwriteProps.push(\"rotation\");\n\t\t\t\t}\n\t\t\t\tplugin._onInitTween(data.proxy, v, cssp._tween);\n\t\t\t\treturn pt;\n\t\t\t}});\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar op = this._overwriteProps,\n\t\t\t\ti = op.length,\n\t\t\t\tval;\n\t\t\twhile (--i > -1) {\n\t\t\t\tval = lookup[op[i]];\n\t\t\t\tif (val && typeof(val) === \"function\") {\n\t\t\t\t\tthis._mod[op[i]] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._props,\n\t\t\t\tp, i;\n\t\t\tfor (p in this._beziers) {\n\t\t\t\tif (p in lookup) {\n\t\t\t\t\tdelete this._beziers[p];\n\t\t\t\t\tdelete this._func[p];\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i] === p) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ta = this._autoRotate;\n\t\t\tif (a) {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i][2]]) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._super._kill.call(this, lookup);\n\t\t};\n\nexport { BezierPlugin, BezierPlugin as default };"]},"metadata":{},"sourceType":"module"}